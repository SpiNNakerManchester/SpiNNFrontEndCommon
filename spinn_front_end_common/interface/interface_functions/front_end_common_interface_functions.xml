<!--
# Copyright (c) 2017-2019 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<algorithms xmlns="https://github.com/SpiNNakerManchester/PACMAN"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="https://github.com/SpiNNakerManchester/PACMAN
            https://raw.githubusercontent.com/SpiNNakerManchester/PACMAN/master/pacman/operations/algorithms_metadata_schema.xsd">
    <algorithm name="BasicSplitterSelector">
        <python_module>spinn_front_end_common.interface.splitter_selectors.splitter_selector</python_module>
        <python_class>SplitterSelector</python_class>
        <input_definitions>
            <parameter>
                <param_name>app_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>app_graph</param_name>
        </required_inputs>
        <outputs>
            <token>SplitterObjectsAllocated</token>
        </outputs>
    </algorithm>
    <algorithm name="SDRAMOutgoingPartitionAllocator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>SDRAMOutgoingPartitionAllocator</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>transceiver</param_name>
            <param_name>placements</param_name>
            <param_name>app_id</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="LocalTDMABuilder">
        <python_module>spinn_front_end_common.interface.interface_functions.local_tdma_builder</python_module>
        <python_class>LocalTDMABuilder</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>n_keys_map</param_name>
                <param_type>MemoryMachinePartitionNKeysMap</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>n_keys_map</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
        </optional_inputs>
    </algorithm>
    <algorithm name="ReadRoutingTablesFromMachine">
        <python_module>spinn_front_end_common.interface.interface_functions.read_routing_tables_from_machine</python_module>
        <python_class>ReadRoutingTablesFromMachine</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>routing_tables</param_name>
            <param_name>app_id</param_name>
            <token>DataLoaded</token>
        </required_inputs>
        <outputs>
            <param_type>MemoryCompressedRoutingTables</param_type>
        </outputs>
    </algorithm>
    <algorithm name="PreAllocateForBitFieldRouterCompressor">
        <python_module>spinn_front_end_common.interface.interface_functions.pre_allocate_for_bit_field_router_compressor</python_module>
        <python_class>PreAllocateForBitFieldRouterCompressor</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>pre_allocated_resources</param_name>
                <param_type>MemoryPreAllocatedResources</param_type>
            </parameter>
            <parameter>
                <param_name>sdram_to_pre_alloc_for_bit_fields</param_name>
                <param_type>RouterCompressorBitFieldPreAllocSize</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>sdram_to_pre_alloc_for_bit_fields</param_name>
            <param_name>pre_allocated_resources</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryPreAllocatedResources</param_type>
            <token part="BitFieldRouterCompressor">GeneratedPreAllocatedResources</token>
        </outputs>
    </algorithm>
    <algorithm name="HostBasedBitFieldRouterCompressor">
        <python_module>spinn_front_end_common.interface.interface_functions.host_bit_field_router_compressor</python_module>
        <python_class>HostBasedBitFieldRouterCompressor</python_class>
        <input_definitions>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>produce_report</param_name>
                <param_type>RouterBitfieldCompressionReport</param_type>
            </parameter>
            <parameter>
                <param_name>target_length</param_name>
                <param_type>RouterCompressorBitFieldTargetLength</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>router_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>placements</param_name>
            <param_name>default_report_folder</param_name>
            <param_name>produce_report</param_name>
            <param_name>machine_graph</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>routing_infos</param_name>
            <token part="BitFieldData">DataLoaded</token>
        </required_inputs>
        <optional_inputs>
            <param_name>target_length</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryCompressedRoutingTables</param_type>
            <param_type>RouterCompressorProvenanceItems</param_type>
       </outputs>
    </algorithm>
    <algorithm name="MachineBitFieldOrderedCoveringCompressor">
        <python_module>spinn_front_end_common.interface.interface_functions.machine_bit_field_router_compressor</python_module>
        <python_class>MachineBitFieldOrderedCoveringCompressor</python_class>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>threshold_percentage</param_name>
                <param_type>RouterCompressorBitFieldPercentageThreshold</param_type>
            </parameter>
            <parameter>
                <param_name>retry_count</param_name>
                <param_type>RouterCompressorBitFieldRetryCount</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>produce_report</param_name>
                <param_type>RouterBitfieldCompressionReport</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>target_length</param_name>
                <param_type>CompressionTargetSize</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>time_to_try_for_each_iteration</param_name>
                <param_type>RouterCompressorBitFieldTimePerAttempt</param_type>
            </parameter>
            <parameter>
                <param_name>use_timer_cut_off</param_name>
                <param_type>RouterCompressorBitFieldUseCutOff</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>RouterCompressorProvenanceItems</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>executable_finder</param_name>
            <param_name>write_compressor_iobuf</param_name>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>produce_report</param_name>
            <param_name>default_report_folder</param_name>
            <param_name>target_length</param_name>
            <param_name>routing_infos</param_name>
            <param_name>threshold_percentage</param_name>
            <param_name>retry_count</param_name>
            <param_name>time_to_try_for_each_iteration</param_name>
            <param_name>use_timer_cut_off</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>executable_targets</param_name>
            <token part="BitFieldData">DataLoaded</token>
        </required_inputs>
        <optional_inputs>
            <param_name>compress_as_much_as_possible</param_name>
            <param_name>provenance_data_objects</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
            <param_type>CompressorExecutableTargetsUsed</param_type>
            <param_type>RouterCompressorProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="MachineBitFieldUnorderedRouterCompressor">
        <!-- DEPRECATED Use OrderedCoveringOnChipRouterCompression !-->
        <python_module>spinn_front_end_common.interface.interface_functions.machine_bit_field_router_compressor</python_module>
        <python_class>MachineBitFieldUnorderedRouterCompressor</python_class>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>threshold_percentage</param_name>
                <param_type>RouterCompressorBitFieldPercentageThreshold</param_type>
            </parameter>
            <parameter>
                <param_name>retry_count</param_name>
                <param_type>RouterCompressorBitFieldRetryCount</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>produce_report</param_name>
                <param_type>RouterBitfieldCompressionReport</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>target_length</param_name>
                <param_type>CompressionTargetSize</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>time_to_try_for_each_iteration</param_name>
                <param_type>RouterCompressorBitFieldTimePerAttempt</param_type>
            </parameter>
            <parameter>
                <param_name>use_timer_cut_off</param_name>
                <param_type>RouterCompressorBitFieldUseCutOff</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>RouterCompressorProvenanceItems</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>executable_finder</param_name>
            <param_name>write_compressor_iobuf</param_name>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>produce_report</param_name>
            <param_name>default_report_folder</param_name>
            <param_name>target_length</param_name>
            <param_name>routing_infos</param_name>
            <param_name>threshold_percentage</param_name>
            <param_name>retry_count</param_name>
            <param_name>time_to_try_for_each_iteration</param_name>
            <param_name>use_timer_cut_off</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>executable_targets</param_name>
            <token part="BitFieldData">DataLoaded</token>
        </required_inputs>
        <optional_inputs>
            <param_name>compress_as_much_as_possible</param_name>
            <param_name>provenance_data_objects</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
            <param_type>CompressorExecutableTargetsUsed</param_type>
            <param_type>RouterCompressorProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="MachineBitFieldPairRouterCompressor">
        <python_module>spinn_front_end_common.interface.interface_functions.machine_bit_field_router_compressor</python_module>
        <python_class>MachineBitFieldUnorderedPairRouterCompressor</python_class>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>threshold_percentage</param_name>
                <param_type>RouterCompressorBitFieldPercentageThreshold</param_type>
            </parameter>
            <parameter>
                <param_name>retry_count</param_name>
                <param_type>RouterCompressorBitFieldRetryCount</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>produce_report</param_name>
                <param_type>RouterBitfieldCompressionReport</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>target_length</param_name>
                <param_type>CompressionTargetSize</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>time_to_try_for_each_iteration</param_name>
                <param_type>RouterCompressorBitFieldTimePerAttempt</param_type>
            </parameter>
            <parameter>
                <param_name>use_timer_cut_off</param_name>
                <param_type>RouterCompressorBitFieldUseCutOff</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>RouterCompressorProvenanceItems</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>executable_finder</param_name>
            <param_name>write_compressor_iobuf</param_name>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>produce_report</param_name>
            <param_name>default_report_folder</param_name>
            <param_name>target_length</param_name>
            <param_name>routing_infos</param_name>
            <param_name>threshold_percentage</param_name>
            <param_name>retry_count</param_name>
            <param_name>time_to_try_for_each_iteration</param_name>
            <param_name>use_timer_cut_off</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>executable_targets</param_name>
            <token part="BitFieldData">DataLoaded</token>
        </required_inputs>
        <optional_inputs>
            <param_name>compress_as_much_as_possible</param_name>
            <param_name>provenance_data_objects</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
            <param_type>CompressorExecutableTargetsUsed</param_type>
            <param_type>RouterCompressorProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SystemMulticastRoutingGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>SystemMulticastRoutingGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>extra_monitor_cores</param_name>
                <param_type>MemoryExtraMonitorToChipMapping</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>extra_monitor_cores</param_name>
            <param_name>placements</param_name>
        </required_inputs>
        <outputs>
            <param_type>DataInMulticastRoutingTables</param_type>
            <param_type>DataInMulticastKeyToChipMap</param_type>
            <param_type>SystemMulticastRouterTimeoutKeys</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ProcessPartitionConstraints">
        <python_module>spinn_front_end_common.interface.interface_functions.process_partition_constraints</python_module>
        <python_class>ProcessPartitionConstraints</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="LoadFixedRoutes">
        <python_module>spinn_front_end_common.interface.interface_functions.load_fixed_routes</python_module>
        <python_class>LoadFixedRoutes</python_class>
        <input_definitions>
            <parameter>
                <param_name>fixed_routes</param_name>
                <param_type>MemoryFixedRoutes</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>fixed_routes</param_name>
            <param_name>transceiver</param_name>
            <param_name>app_id</param_name>
        </required_inputs>
        <outputs>
            <token part="FixedRoutesLoaded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="InsertEdgesToExtraMonitorFunctionality">
        <python_module>spinn_front_end_common.interface.interface_functions.insert_edges_to_extra_monitor_functionality</python_module>
        <python_class>InsertEdgesToExtraMonitorFunctionality</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>vertex_to_ethernet_connected_chip_mapping</param_name>
                <param_type>MemoryMCGatherVertexToEthernetConnectedChipMapping</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>vertex_to_ethernet_connected_chip_mapping</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
        </optional_inputs>
    </algorithm>
    <algorithm name="InsertExtraMonitorVerticesToGraphs">
        <python_module>spinn_front_end_common.interface.interface_functions.insert_extra_monitor_vertices_to_graphs</python_module>
        <python_class>InsertExtraMonitorVerticesToGraphs</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>write_data_speed_up_reports</param_name>
                <param_type>WriteDataSpeedUpReportsFlag</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>machine_graph</param_name>
            <param_name>default_report_directory</param_name>
            <param_name>write_data_speed_up_reports</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryMCGatherVertexToEthernetConnectedChipMapping</param_type>
            <param_type>MemoryExtraMonitorVertices</param_type>
            <param_type>MemoryExtraMonitorToChipMapping</param_type>
        </outputs>
    </algorithm>
    <algorithm name="PreAllocateResourcesForExtraMonitorSupport">
        <python_module>spinn_front_end_common.interface.interface_functions.preallocate_resources_for_extra_monitor_support</python_module>
        <python_class>PreAllocateResourcesForExtraMonitorSupport</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryVirtualMachine</param_type>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>pre_allocated_resources</param_name>
                <param_type>MemoryPreAllocatedResources</param_type>
            </parameter>
            <parameter>
                <param_name>n_cores_to_allocate</param_name>
                <param_type>MCGathererCoresToAllocate</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>pre_allocated_resources</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>n_cores_to_allocate</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryPreAllocatedResources</param_type>
            <token part="ExtraMonitor">GeneratedPreAllocatedResources</token>
        </outputs>
    </algorithm>
    <algorithm name="PreAllocateResourcesForChipPowerMonitor">
        <python_module>
            spinn_front_end_common.interface.interface_functions.pre_allocate_resources_for_chip_power_monitor
        </python_module>
        <python_class>PreAllocateResourcesForChipPowerMonitor</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryVirtualMachine</param_type>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>pre_allocated_resources</param_name>
                <param_type>MemoryPreAllocatedResources</param_type>
            </parameter>
            <parameter>
                <param_name>n_samples_per_recording</param_name>
                <param_type>MemoryNumberSamplesPerRecordingEntry</param_type>
            </parameter>
            <parameter>
                <param_name>sampling_frequency</param_name>
                <param_type>MemorySamplingFrequency</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>n_samples_per_recording</param_name>
            <param_name>sampling_frequency</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>pre_allocated_resources</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryPreAllocatedResources</param_type>
            <token part="EnergyMonitor">GeneratedPreAllocatedResources</token>
        </outputs>
    </algorithm>
    <algorithm name="InsertChipPowerMonitorsToGraphs">
        <python_module>
            spinn_front_end_common.interface.interface_functions.insert_chip_power_monitors_to_graphs
        </python_module>
        <python_class>InsertChipPowerMonitorsToGraphs</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>n_samples_per_recording</param_name>
                <param_type>MemoryNumberSamplesPerRecordingEntry</param_type>
            </parameter>
            <parameter>
                <param_name>sampling_frequency</param_name>
                <param_type>MemorySamplingFrequency</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>machine_graph</param_name>
            <param_name>n_samples_per_recording</param_name>
            <param_name>sampling_frequency</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
        </optional_inputs>
    </algorithm>
    <algorithm name="PreAllocateResourcesForLivePacketGatherers">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>PreAllocateResourcesForLivePacketGatherers</python_class>
        <input_definitions>
            <parameter>
                <param_name>live_packet_gatherer_parameters</param_name>
                <param_type>LivePacketRecorderParameters</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryVirtualMachine</param_type>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>pre_allocated_resources</param_name>
                <param_type>MemoryPreAllocatedResources</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>live_packet_gatherer_parameters</param_name>
            <param_name>machine</param_name>
            <param_name>pre_allocated_resources</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryPreAllocatedResources</param_type>
            <token part="LivePacketGatherer">GeneratedPreAllocatedResources</token>
        </outputs>
    </algorithm>
    <algorithm name="InsertEdgesToLivePacketGatherers">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>InsertEdgesToLivePacketGatherers</python_class>
        <input_definitions>
            <parameter>
                <param_name>live_packet_gatherer_parameters</param_name>
                <param_type>LivePacketRecorderParameters</param_type>
            </parameter>
            <parameter>
                <param_name>live_packet_gatherers_to_vertex_mapping</param_name>
                <param_type>LivePacketRecorderParametersToVertexMapping</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>n_keys_map</param_name>
                <param_type>MemoryMachinePartitionNKeysMap</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>live_packet_gatherer_parameters</param_name>
            <param_name>live_packet_gatherers_to_vertex_mapping</param_name>
            <param_name>machine</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
            <param_name>n_keys_map</param_name>
        </optional_inputs>
    </algorithm>
    <algorithm name="InsertLivePacketGatherersToGraphs">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>InsertLivePacketGatherersToGraphs</python_class>
        <input_definitions>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>live_packet_gatherer_parameters</param_name>
                <param_type>LivePacketRecorderParameters</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>live_packet_gatherer_parameters</param_name>
            <param_name>machine_graph</param_name>
            <param_name>machine</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
        </optional_inputs>
        <outputs>
            <param_type>LivePacketRecorderParametersToVertexMapping</param_type>
        </outputs>
    </algorithm>
    <algorithm name="TDMAAgendaBuilder">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>TDMAAgendaBuilder</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>number_of_cpu_cycles_per_receive</param_name>
                <param_type>NumberOfCPUCyclesUsedByThePacketReceiveCallback
                </param_type>
            </parameter>
            <parameter>
                <param_name>other_cpu_demands_in_cpu_cycles</param_name>
                <param_type>NumberOfCpuCyclesByOtherCallbacks</param_type>
            </parameter>
            <parameter>
                <param_name>n_packets_per_time_window</param_name>
                <param_type>NPacketsPerTimeWindow</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>safety_factor</param_name>
                <param_type>EndUserConfigurableSafetyFactorForTDMAAgenda</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>other_cpu_demands_in_cpu_cycles</param_name>
            <param_name>n_packets_per_time_window</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>number_of_cpu_cycles_per_receive</param_name>
            <param_name>machine_graph</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>safety_factor</param_name>
        </optional_inputs>
        <outputs>
            <param_type>TDMAAgenda</param_type>
        </outputs>
    </algorithm>
    <algorithm name="DSGRegionReloader">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>DSGRegionReloader</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>hostname</param_name>
                <param_type>IPAddress</param_type>
            </parameter>
            <parameter>
                <param_name>report_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>write_text_specs</param_name>
                <param_type>WriteTextSpecsFlag</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>placements</param_name>
            <param_name>hostname</param_name>
            <param_name>report_directory</param_name>
            <param_name>write_text_specs</param_name>
        </required_inputs>
        <optional_inputs>
            <token part="DSGDataLoaded">DataLoaded</token>
            <token>ClearedIOBuf</token>
        </optional_inputs>
        <outputs>
            <token part="DSGDataReLoaded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="HostExecuteApplicationDataSpecification">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>HostExecuteDataSpecification</python_class>
        <python_method>execute_application_data_specs</python_method>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>dsg_targets</param_name>
                <param_type>DataSpecificationTargets</param_type>
            </parameter>
            <parameter>
                <param_name>report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>java_caller</param_name>
                <param_type>JavaCaller</param_type>
            </parameter>
            <parameter>
                <param_name>processor_to_app_data_base_address</param_name>
                <param_type>ProcessorToAppDataBaseAddress</param_type>
            </parameter>
            <parameter>
                <param_name>uses_advanced_monitors</param_name>
                <param_type>UsingAdvancedMonitorSupport</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>extra_monitor_cores</param_name>
                <param_type>MemoryExtraMonitorVertices</param_type>
            </parameter>
            <parameter>
                <param_name>extra_monitor_cores_to_ethernet_connection_map</param_name>
                <param_type>MemoryMCGatherVertexToEthernetConnectedChipMapping</param_type>
            </parameter>
            <parameter>
                <param_name>disable_advanced_monitor_usage</param_name>
                <param_type>DisableAdvancedMonitorUsageForDataIn</param_type>
            </parameter>
            <parameter>
                <param_name>region_sizes</param_name>
                <param_type>RegionSizes</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>region_sizes</param_name>
            <param_name>app_id</param_name>
            <param_name>dsg_targets</param_name>
            <param_name>uses_advanced_monitors</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>report_folder</param_name>
            <param_name>java_caller</param_name>
            <param_name>processor_to_app_data_base_address</param_name>
            <param_name>executable_targets</param_name>
            <param_name>placements</param_name>
            <param_name>extra_monitor_cores</param_name>
            <param_name>extra_monitor_cores_to_ethernet_connection_map</param_name>
            <param_name>disable_advanced_monitor_usage</param_name>
            <token part="DSGSystemDataLoaded">DataLoaded</token>
            <token part="SystemBinariesLoaded">DataLoaded</token>
        </optional_inputs>
        <outputs>
            <param_type>ProcessorToAppDataBaseAddress</param_type>
            <token part="DSGDataLoaded">DataLoaded</token>
            <token part="DSGAppDataLoaded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="HostExecuteSystemDataSpecification">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>HostExecuteDataSpecification</python_class>
        <python_method>execute_system_data_specs</python_method>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>dsg_targets</param_name>
                <param_type>DataSpecificationTargets</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>java_caller</param_name>
                <param_type>JavaCaller</param_type>
            </parameter>
            <parameter>
                <param_name>processor_to_app_data_base_address</param_name>
                <param_type>ProcessorToAppDataBaseAddress</param_type>
            </parameter>
            <parameter>
                <param_name>region_sizes</param_name>
                <param_type>RegionSizes</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>dsg_targets</param_name>
            <param_name>executable_targets</param_name>
            <param_name>region_sizes</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>report_folder</param_name>
            <param_name>java_caller</param_name>
            <param_name>processor_to_app_data_base_address</param_name>
        </optional_inputs>
        <outputs>
            <param_type>ProcessorToAppDataBaseAddress</param_type>
            <token part="DSGSystemDataLoaded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="LoadApplicationExecutableImages">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>LoadExecutableImages</python_class>
        <python_method>load_app_images</python_method>
        <input_definitions>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>executable_targets</param_name>
            <param_name>app_id</param_name>
            <param_name>transceiver</param_name>
            <token part="DSGAppDataLoaded">DataLoaded</token>
        </required_inputs>
        <outputs>
            <token part="ApplicationBinariesLoaded">BinariesLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="LoadSystemExecutableImages">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>LoadExecutableImages</python_class>
        <python_method>load_sys_images</python_method>
        <input_definitions>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>executable_targets</param_name>
            <param_name>app_id</param_name>
            <param_name>transceiver</param_name>
            <token part="DSGSystemDataLoaded">DataLoaded</token>
        </required_inputs>
        <outputs>
            <token part="SystemBinariesLoaded">BinariesLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="MachineGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>MachineGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>hostname</param_name>
                <param_type>IPAddress</param_type>
            </parameter>
            <parameter>
                <param_name>reset_machine_on_start_up</param_name>
                <param_type>ResetMachineOnStartupFlag</param_type>
            </parameter>
            <parameter>
                <param_name>bmp_details</param_name>
                <param_type>BMPDetails</param_type>
            </parameter>
            <parameter>
                <param_name>downed_chips</param_name>
                <param_type>DownedChipsDetails</param_type>
            </parameter>
            <parameter>
                <param_name>downed_cores</param_name>
                <param_type>DownedCoresDetails</param_type>
            </parameter>
            <parameter>
                <param_name>downed_links</param_name>
                <param_type>DownedLinksDetails</param_type>
            </parameter>
            <parameter>
                <param_name>board_version</param_name>
                <param_type>BoardVersion</param_type>
            </parameter>
            <parameter>
                <param_name>auto_detect_bmp</param_name>
                <param_type>AutoDetectBMPFlag</param_type>
            </parameter>
            <parameter>
                <param_name>scamp_connection_data</param_name>
                <param_type>ScampConnectionData</param_type>
            </parameter>
            <parameter>
                <param_name>boot_port_num</param_name>
                <param_type>BootPortNum</param_type>
            </parameter>
            <parameter>
                <param_name>max_sdram_size</param_name>
                <param_type>MaxSDRAMSize</param_type>
            </parameter>
            <parameter>
                <param_name>repair_machine</param_name>
                <param_type>RepairMachine</param_type>
            </parameter>
            <parameter>
                <param_name>ignore_bad_ethernets</param_name>
                <param_type>IgnoreBadEthernets</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>report_waiting_logs</param_name>
                <param_type>ReportWaitingLogsFlag</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>report_waiting_logs</param_name>
            <param_name>hostname</param_name>
            <param_name>reset_machine_on_start_up</param_name>
            <param_name>bmp_details</param_name>
            <param_name>downed_chips</param_name>
            <param_name>downed_cores</param_name>
            <param_name>downed_links</param_name>
            <param_name>board_version</param_name>
            <param_name>auto_detect_bmp</param_name>
            <param_name>scamp_connection_data</param_name>
            <param_name>boot_port_num</param_name>
            <param_name>max_sdram_size</param_name>
            <param_name>repair_machine</param_name>
            <param_name>ignore_bad_ethernets</param_name>
            <param_name>default_report_directory</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryMachine</param_type>
            <param_type>MemoryTransceiver</param_type>
        </outputs>
    </algorithm>
    <algorithm name="RoutingTableLoader">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>RoutingTableLoader</python_class>
        <input_definitions>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryCompressedRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>router_tables</param_name>
            <param_name>app_id</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
        </required_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="RoutingSetup">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>RoutingSetup</python_class>
        <input_definitions>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryCompressedRoutingTables</param_type>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>router_tables</param_name>
            <param_name>app_id</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="TagsLoader">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>TagsLoader</python_class>
        <input_definitions>
            <parameter>
                <param_name>tags</param_name>
                <param_type>MemoryTags</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>tags</param_name>
            <param_name>transceiver</param_name>
        </required_inputs>
        <outputs>
            <token part="LoadedIPTags">DataLoaded</token>
            <token part="LoadedReverseIPTags">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="TagsLoaderSeparateLists">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>TagsLoader</python_class>
        <input_definitions>
            <parameter>
                <param_name>iptags</param_name>
                <param_type>MemoryIpTags</param_type>
            </parameter>
            <parameter>
                <param_name>reverse_iptags</param_name>
                <param_type>MemoryReverseTags</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>iptags</param_name>
            <param_name>reverse_iptags</param_name>
            <param_name>transceiver</param_name>
        </required_inputs>
        <outputs>
            <token part="LoadedIPTags">DataLoaded</token>
            <token part="LoadedReverseIPTags">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="VirtualMachineGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>VirtualMachineGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>width</param_name>
                <param_type>MachineWidth</param_type>
            </parameter>
            <parameter>
                <param_name>height</param_name>
                <param_type>MachineHeight</param_type>
            </parameter>
            <parameter>
                <param_name>version</param_name>
                <param_type>BoardVersion</param_type>
            </parameter>
            <parameter>
                <param_name>down_chips</param_name>
                <param_type>DownedChipsDetails</param_type>
            </parameter>
            <parameter>
                <param_name>down_cores</param_name>
                <param_type>DownedCoresDetails</param_type>
            </parameter>
            <parameter>
                <param_name>down_links</param_name>
                <param_type>DownedLinksDetails</param_type>
            </parameter>
            <parameter>
                <param_name>max_sdram_size</param_name>
                <param_type>MaxSDRAMSize</param_type>
            </parameter>
            <parameter>
                <param_name>router_entries_per_chip</param_name>
                <param_type>RouterTableEntriesPerRouter</param_type>
            </parameter>
            <parameter>
                <param_name>json_path</param_name>
                <param_type>MachineJsonPath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <one_of>
                <all_of>
                    <param_name>width</param_name>
                    <param_name>height</param_name>
                </all_of>
                <param_name>json_path</param_name>
            </one_of>
        </required_inputs>
        <optional_inputs>
            <param_name>version</param_name>
            <param_name>down_chips</param_name>
            <param_name>down_cores</param_name>
            <param_name>down_links</param_name>
            <param_name>max_sdram_size</param_name>
            <param_name>router_entries_per_chip</param_name>
            <param_name>json_path</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryMachine</param_type>
        </outputs>
    </algorithm>
    <algorithm name="GraphDataSpecificationWriter">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>GraphDataSpecificationWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>hostname</param_name>
                <param_type>IPAddress</param_type>
            </parameter>
            <parameter>
                <param_name>report_default_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>write_text_specs</param_name>
                <param_type>WriteTextSpecsFlag</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>data_n_timesteps</param_name>
                <param_type>DataNTimeSteps</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>hostname</param_name>
            <param_name>report_default_directory</param_name>
            <param_name>write_text_specs</param_name>
            <param_name>machine</param_name>
            <param_name>data_n_timesteps</param_name>
        </required_inputs>
        <outputs>
            <param_type>DataSpecificationTargets</param_type>
            <param_type>RegionSizes</param_type>
        </outputs>
    </algorithm>
    <algorithm name="GraphBinaryGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>GraphBinaryGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>executable_finder</param_name>
            <param_name>graph</param_name>
        </required_inputs>
        <outputs>
            <param_type>ExecutableTargets</param_type>
        </outputs>
    </algorithm>
    <algorithm name="LocateExecutableStartType">
        <python_module>spinn_front_end_common.interface.interface_functions.locate_executable_start_type</python_module>
        <python_class>LocateExecutableStartType</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>graph</param_name>
            <param_name>placements</param_name>
        </required_inputs>
        <outputs>
            <param_type>ExecutableTypes</param_type>
        </outputs>
    </algorithm>
    <algorithm name="BufferManagerCreator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>BufferManagerCreator</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>tags</param_name>
                <param_type>MemoryTags</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>extra_monitor_cores</param_name>
                <param_type>MemoryExtraMonitorVertices</param_type>
            </parameter>
            <parameter>
                <param_name>packet_gather_cores_to_ethernet_connection_map</param_name>
                <param_type>MemoryMCGatherVertexToEthernetConnectedChipMapping</param_type>
            </parameter>
            <parameter>
                <param_name>extra_monitor_to_chip_mapping</param_name>
                <param_type>MemoryExtraMonitorToChipMapping</param_type>
            </parameter>
            <parameter>
                <param_name>uses_advanced_monitors</param_name>
                <param_type>UsingAdvancedMonitorSupport</param_type>
            </parameter>
            <parameter>
                <param_name>fixed_routes</param_name>
                <param_type>MemoryFixedRoutes</param_type>
            </parameter>
            <parameter>
                <param_name>report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>java_caller</param_name>
                <param_type>JavaCaller</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>report_folder</param_name>
            <param_name>placements</param_name>
            <param_name>tags</param_name>
            <param_name>txrx</param_name>
            <param_name>uses_advanced_monitors</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>extra_monitor_cores</param_name>
            <param_name>packet_gather_cores_to_ethernet_connection_map</param_name>
            <param_name>extra_monitor_to_chip_mapping</param_name>
            <param_name>fixed_routes</param_name>
            <param_name>machine</param_name>
            <param_name>java_caller</param_name>
        </optional_inputs>
        <outputs>
            <param_type>BufferManager</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ApplicationRunner">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ApplicationRunner</python_class>
        <input_definitions>
            <parameter>
                <param_name>buffer_manager</param_name>
                <param_type>BufferManager</param_type>
            </parameter>
            <parameter>
                <param_name>notification_interface</param_name>
                <param_type>NotificationInterface</param_type>
            </parameter>
            <parameter>
                <param_name>executable_types</param_name>
                <param_type>ExecutableTypes</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>runtime</param_name>
                <param_type>RunTime</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>no_sync_changes</param_name>
                <param_type>NoSyncChanges</param_type>
            </parameter>
            <parameter>
                <param_name>time_threshold</param_name>
                <param_type>PostSimulationOverrunBeforeError</param_type>
            </parameter>
            <parameter>
                <param_name>run_until_complete</param_name>
                <param_type>RunUntilCompleteFlag</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
                <param_type>MemoryMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>buffer_manager</param_name>
            <param_name>notification_interface</param_name>
            <param_name>executable_types</param_name>
            <param_name>app_id</param_name>
            <param_name>txrx</param_name>
            <param_name>runtime</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>no_sync_changes</param_name>
            <param_name>time_threshold</param_name>
            <param_name>machine</param_name>
            <token>DataLoaded</token>
            <token>BinariesLoaded</token>
        </required_inputs>
        <optional_inputs>
            <param_name>run_until_complete</param_name>
            <token>ClearedIOBuf</token>
        </optional_inputs>
        <outputs>
            <param_type>NoSyncChanges</param_type>
            <token>ApplicationRun</token>
        </outputs>
    </algorithm>
    <algorithm name="PlacementsProvenanceGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>PlacementsProvenanceGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>placements</param_name>
            <token>ApplicationRun</token>
        </required_inputs>
        <outputs>
            <param_type>PlacementsProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="GraphProvenanceGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>GraphProvenanceGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
        </optional_inputs>
        <outputs>
            <param_type>GraphProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="RouterProvenanceGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>RouterProvenanceGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>extra_monitor_vertices</param_name>
                <param_type>MemoryExtraMonitorVertices</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>using_reinjection</param_name>
                <param_type>UsingReinjection</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>router_tables</param_name>
            <param_name>using_reinjection</param_name>
            <token>ApplicationRun</token>
        </required_inputs>
        <optional_inputs>
            <param_name>provenance_data_objects</param_name>
            <param_name>extra_monitor_vertices</param_name>
            <param_name>placements</param_name>
        </optional_inputs>
        <outputs>
            <param_type>RouterProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ProvenanceXMLWriter">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ProvenanceXMLWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>provenance_data_items</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_path</param_name>
                <param_type>AppProvenanceFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>provenance_data_items</param_name>
            <param_name>provenance_data_path</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="ProvenanceJSONWriter">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ProvenanceJSONWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>provenance_data_items</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_path</param_name>
                <param_type>AppProvenanceFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>provenance_data_items</param_name>
            <param_name>provenance_data_path</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="ProvenanceSQLWriter">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ProvenanceSQLWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>provenance_data_items</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_path</param_name>
                <param_type>AppProvenanceFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>provenance_data_items</param_name>
            <param_name>provenance_data_path</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="DatabaseInterface">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>DatabaseInterface</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>user_create_database</param_name>
                <param_type>UserCreateDatabaseFlag</param_type>
            </parameter>
            <parameter>
                <param_name>tags</param_name>
                <param_type>MemoryTags</param_type>
            </parameter>
            <parameter>
                <param_name>report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>runtime</param_name>
                <param_type>RunTime</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>data_n_timesteps</param_name>
                <param_type>DataNTimeSteps</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
                <param_type>MemoryCompressedRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>create_atom_to_event_id_mapping</param_name>
                <param_type>CreateAtomToEventIdMapping</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>user_create_database</param_name>
            <param_name>tags</param_name>
            <param_name>report_folder</param_name>
            <param_name>runtime</param_name>
            <param_name>machine</param_name>
            <param_name>data_n_timesteps</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>placements</param_name>
            <param_name>routing_infos</param_name>
            <param_name>router_tables</param_name>
        </required_inputs>
        <optional_inputs>
            <all_of>
                <param_name>create_atom_to_event_id_mapping</param_name>
                <param_name>application_graph</param_name>
            </all_of>
        </optional_inputs>
        <outputs>
            <param_type>DatabaseInterface</param_type>
            <param_type>DatabaseFilePath</param_type>
        </outputs>
    </algorithm>
    <algorithm name="CreateNotificationProtocol">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>CreateNotificationProtocol</python_class>
        <input_definitions>
            <parameter>
                <param_name>wait_for_read_confirmation</param_name>
                <param_type>DatabaseWaitOnConfirmationFlag</param_type>
            </parameter>
            <parameter>
                <param_name>socket_addresses</param_name>
                <param_type>DatabaseSocketAddresses</param_type>
            </parameter>
            <parameter>
                <param_name>database_file_path</param_name>
                <param_type>DatabaseFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>wait_for_read_confirmation</param_name>
            <param_name>socket_addresses</param_name>
            <param_name>database_file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>NotificationInterface</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ApplicationFinisher">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ApplicationFinisher</python_class>
        <input_definitions>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>executable_types</param_name>
                <param_type>ExecutableTypes</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>app_id</param_name>
            <param_name>txrx</param_name>
            <param_name>executable_types</param_name>
            <token>ApplicationRun</token>
        </required_inputs>
    </algorithm>
    <algorithm name="ChipRuntimeUpdater">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ChipRuntimeUpdater</python_class>
        <input_definitions>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>executable_types</param_name>
                <param_type>ExecutableTypes</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>run_until_timesteps</param_name>
                <param_type>RunUntilTimeSteps</param_type>
            </parameter>
            <parameter>
                <param_name>current_timesteps</param_name>
                <param_type>FirstMachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>n_sync_steps</param_name>
                <param_type>NSyncSteps</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>txrx</param_name>
            <param_name>app_id</param_name>
            <param_name>executable_types</param_name>
            <param_name>run_until_timesteps</param_name>
            <param_name>current_timesteps</param_name>
            <param_name>n_sync_steps</param_name>
            <token>BinariesLoaded</token>
        </required_inputs>
        <optional_inputs>
            <token>ClearedIOBuf</token>
        </optional_inputs>
        <outputs>
            <token part="SimulationBinaries">ChipRuntimeUpdated</token>
        </outputs>
    </algorithm>
    <algorithm name="ChipProvenanceUpdater">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ChipProvenanceUpdater</python_class>
        <input_definitions>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>all_core_subsets</param_name>
                <param_type>FailedCoresSubsets</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>txrx</param_name>
            <param_name>app_id</param_name>
            <param_name>all_core_subsets</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="ChipIOBufClearer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ChipIOBufClearer</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>executable_types</param_name>
                <param_type>ExecutableTypes</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>executable_types</param_name>
            <token>ApplicationRun</token>
        </required_inputs>
        <optional_inputs>
            <token>ReadIOBuf</token>
        </optional_inputs>
        <outputs>
            <token>ClearedIOBuf</token>
        </outputs>
    </algorithm>
    <algorithm name="ChipIOBufExtractor">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ChipIOBufExtractor</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>app_provenance_file_path</param_name>
                <param_type>AppProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>system_provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>from_cores</param_name>
                <param_type>ExtractIobufFromCores</param_type>
            </parameter>
            <parameter>
                <param_name>binary_types</param_name>
                <param_type>ExtractIobufFromBinaryTypes</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>executable_targets</param_name>
            <param_name>executable_finder</param_name>
            <param_name>app_provenance_file_path</param_name>
            <param_name>system_provenance_file_path</param_name>
            <token>ApplicationRun</token>
        </required_inputs>
        <optional_inputs>
            <param_name>from_cores</param_name>
            <param_name>binary_types</param_name>
        </optional_inputs>
        <outputs>
            <param_type>ErrorMessages</param_type>
            <param_type>WarnMessages</param_type>
            <token>ReadIOBuf</token>
        </outputs>
    </algorithm>
    <algorithm name="EdgeToNKeysMapper">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>EdgeToNKeysMapper</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryMachinePartitionNKeysMap</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpallocAllocator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>SpallocAllocator</python_class>
        <input_definitions>
            <parameter>
                <param_name>spalloc_server</param_name>
                <param_type>SpallocServer</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_user</param_name>
                <param_type>SpallocUser</param_type>
            </parameter>
            <parameter>
                <param_name>n_chips</param_name>
                <param_type>NChipsRequired</param_type>
            </parameter>
            <parameter>
                <param_name>n_boards</param_name>
                <param_type>NBoardsRequired</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_port</param_name>
                <param_type>SpallocPort</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_machine</param_name>
                <param_type>SpallocMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>spalloc_server</param_name>
            <param_name>spalloc_user</param_name>
            <one_of>
                <param_name>n_chips</param_name>
                <param_name>n_boards</param_name>
            </one_of>
        </required_inputs>
        <optional_inputs>
            <param_name>spalloc_port</param_name>
            <param_name>spalloc_machine</param_name>
        </optional_inputs>
        <outputs>
            <param_type>IPAddress</param_type>
            <param_type>BoardVersion</param_type>
            <param_type>BMPDetails</param_type>
            <param_type>ResetMachineOnStartupFlag</param_type>
            <param_type>AutoDetectBMPFlag</param_type>
            <param_type>ScampConnectionData</param_type>
            <param_type>BootPortNum</param_type>
            <param_type>MachineAllocationController</param_type>
        </outputs>
    </algorithm>
    <algorithm name="HBPAllocator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>HBPAllocator</python_class>
        <input_definitions>
            <parameter>
                <param_name>hbp_server_url</param_name>
                <param_type>RemoteSpinnakerUrl</param_type>
            </parameter>
            <parameter>
                <param_name>total_run_time</param_name>
                <param_type>TotalRunTime</param_type>
            </parameter>
            <parameter>
                <param_name>n_chips</param_name>
                <param_type>NChipsRequired</param_type>
            </parameter>
            <parameter>
                <param_name>n_boards</param_name>
                <param_type>NBoardsRequired</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>hbp_server_url</param_name>
            <param_name>total_run_time</param_name>
            <one_of>
                <param_name>n_chips</param_name>
                <param_name>n_boards</param_name>
            </one_of>
        </required_inputs>
        <outputs>
            <param_type>IPAddress</param_type>
            <param_type>BoardVersion</param_type>
            <param_type>BMPDetails</param_type>
            <param_type>ResetMachineOnStartupFlag</param_type>
            <param_type>AutoDetectBMPFlag</param_type>
            <param_type>ScampConnectionData</param_type>
            <param_type>BootPortNum</param_type>
            <param_type>MachineAllocationController</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpallocMaxMachineGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>SpallocMaxMachineGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>spalloc_server</param_name>
                <param_type>SpallocServer</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_port</param_name>
                <param_type>SpallocPort</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_machine</param_name>
                <param_type>SpallocMachine</param_type>
            </parameter>
            <parameter>
                <param_name>max_sdram_size</param_name>
                <param_type>MaxSDRAMSize</param_type>
            </parameter>
            <parameter>
                <param_name>max_machine_core_reduction</param_name>
                <param_type>MaxMachineCoreReduction</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>spalloc_server</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>spalloc_port</param_name>
            <param_name>spalloc_machine</param_name>
            <param_name>max_sdram_size</param_name>
            <param_name>max_machine_core_reduction</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryVirtualMachine</param_type>
        </outputs>
    </algorithm>
    <algorithm name="HBPMaxMachineGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>HBPMaxMachineGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>hbp_server_url</param_name>
                <param_type>RemoteSpinnakerUrl</param_type>
            </parameter>
            <parameter>
                <param_name>total_run_time</param_name>
                <param_type>TotalRunTime</param_type>
            </parameter>
            <parameter>
                <param_name>max_machine_core_reduction</param_name>
                <param_type>MaxMachineCoreReduction</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>hbp_server_url</param_name>
            <param_name>total_run_time</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>max_machine_core_reduction</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryVirtualMachine</param_type>
        </outputs>
    </algorithm>
    <algorithm name="GraphMeasurer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>GraphMeasurer</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>plan_n_timesteps</param_name>
                <param_type>PlanNTimeSteps</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>machine</param_name>
            <param_name>plan_n_timesteps</param_name>
        </required_inputs>
        <outputs>
            <param_type>NChipsRequired</param_type>
        </outputs>
    </algorithm>
    <algorithm name="BufferExtractor">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>BufferExtractor</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>buffer_manager</param_name>
                <param_type>BufferManager</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>buffer_manager</param_name>
            <token>ApplicationRun</token>
        </required_inputs>
    </algorithm>
    <algorithm name="ProfileDataGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions.profile_data_gatherer</python_module>
        <python_class>ProfileDataGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>AppProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>placements</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>machine_time_step</param_name>
            <token>ApplicationRun</token>
        </required_inputs>
    </algorithm>
    <algorithm name="FinaliseTimingData">
        <python_module>spinn_front_end_common.interface.interface_functions.finalise_timing_data</python_module>
        <python_class>FinaliseTimingData</python_class>
        <input_definitions></input_definitions>
        <required_inputs>
            <token>ApplicationRun</token>
        </required_inputs>
        <optional_inputs>
        <!-- After iobuf extraction, if that happens at all -->
            <token>ReadIOBuf</token>
        </optional_inputs>
        <outputs>
            <param_type>MappingTimeMs</param_type>
            <param_type>DSGTimeMs</param_type>
            <param_type>LoadTimeMs</param_type>
            <param_type>ExecuteTimeMs</param_type>
            <param_type>ExtractionTimeMs</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ComputeEnergyUsed">
        <python_module>spinn_front_end_common.interface.interface_functions.compute_energy_used</python_module>
        <python_class>ComputeEnergyUsed</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>version</param_name>
                <param_type>BoardVersion</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>router_provenance</param_name>
                <param_type>RouterProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>runtime</param_name>
                <param_type>RunTime</param_type>
            </parameter>
            <parameter>
                <param_name>buffer_manager</param_name>
                <param_type>BufferManager</param_type>
            </parameter>
            <parameter>
                <param_name>mapping_time</param_name>
                <param_type>MappingTimeMs</param_type>
            </parameter>
            <parameter>
                <param_name>load_time</param_name>
                <param_type>LoadTimeMs</param_type>
            </parameter>
            <parameter>
                <param_name>execute_time</param_name>
                <param_type>ExecuteTimeMs</param_type>
            </parameter>
            <parameter>
                <param_name>dsg_time</param_name>
                <param_type>DSGTimeMs</param_type>
            </parameter>
            <parameter>
                <param_name>extraction_time</param_name>
                <param_type>ExtractionTimeMs</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_server</param_name>
                <param_type>SpallocServer</param_type>
            </parameter>
            <parameter>
                <param_name>remote_spinnaker_url</param_name>
                <param_type>RemoteSpinnakerUrl</param_type>
            </parameter>
            <parameter>
                <param_name>machine_allocation_controller</param_name>
                <param_type>MachineAllocationController</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>machine</param_name>
            <param_name>version</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>router_provenance</param_name>
            <param_name>runtime</param_name>
            <param_name>buffer_manager</param_name>
            <param_name>mapping_time</param_name>
            <param_name>load_time</param_name>
            <param_name>execute_time</param_name>
            <param_name>dsg_time</param_name>
            <param_name>extraction_time</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>spalloc_server</param_name>
            <param_name>remote_spinnaker_url</param_name>
            <param_name>machine_allocation_controller</param_name>
        </optional_inputs>
        <outputs>
            <param_type>PowerUsed</param_type>
        </outputs>
    </algorithm>
    <algorithm name="EnergyProvenanceReporter">
        <python_module>spinn_front_end_common.interface.interface_functions.energy_provenance_reporter</python_module>
        <python_class>EnergyProvenanceReporter</python_class>
        <input_definitions>
            <parameter>
                <param_name>power_used</param_name>
                <param_type>PowerUsed</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>power_used</param_name>
            <param_name>placements</param_name>
        </required_inputs>
        <outputs>
            <param_type>PowerProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="MundyOnChipRouterCompression">
        <!-- This is a stub that will raise a error do not use -->
        <python_module>spinn_front_end_common.interface.interface_functions.host_no_bitfield_router_compression</python_module>
        <python_function>mundy_on_chip_router_compression</python_function>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>system_provenance_folder</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>system_provenance_folder</param_name>
        </required_inputs>
        <optional_inputs>
                <param_name>compress_as_much_as_possible</param_name>
                <param_name>write_compressor_iobuf</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
        </outputs>
    </algorithm><algorithm name="PairOnChipRouterCompression">
        <python_module>spinn_front_end_common.interface.interface_functions.host_no_bitfield_router_compression</python_module>
        <python_function>pair_compression</python_function>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>executable_finder</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
        </required_inputs>
        <optional_inputs>
                <param_name>compress_as_much_as_possible</param_name>
                <param_name>write_compressor_iobuf</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="OrderedCoveringOnChipRouterCompression">
        <python_module>spinn_front_end_common.interface.interface_functions.host_no_bitfield_router_compression</python_module>
        <python_function>ordered_covering_compression</python_function>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>executable_finder</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
        </required_inputs>
        <optional_inputs>
                <param_name>compress_as_much_as_possible</param_name>
                <param_name>write_compressor_iobuf</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="UnorderedOnChipRouterCompression">
        <!-- DEPRECATED Use OrderedCoveringOnChipRouterCompression !-->
        <python_module>spinn_front_end_common.interface.interface_functions.host_no_bitfield_router_compression</python_module>
        <python_function>unordered_compression</python_function>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>executable_finder</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
        </required_inputs>
        <optional_inputs>
                <param_name>compress_as_much_as_possible</param_name>
                <param_name>write_compressor_iobuf</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="FindApplicationChipsUsed">
        <python_module>spinn_front_end_common.interface.interface_functions.find_application_chips_used</python_module>
        <python_class>FindApplicationChipsUsed</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
        </required_inputs>
        <outputs>
            <param_type>NChipsUsed</param_type>
            <param_type>MaxCoresUsedOnChip</param_type>
            <param_type>MinCoresUsedOnChip</param_type>
            <param_type>AverageCoresOnChip</param_type>
        </outputs>
    </algorithm>
</algorithms>
