<algorithms xmlns="https://github.com/SpiNNakerManchester/PACMAN"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="https://github.com/SpiNNakerManchester/PACMAN
            https://raw.githubusercontent.com/SpiNNakerManchester/PACMAN/master/pacman/operations/algorithms_metadata_schema.xsd">
    <algorithm name="PreAllocateResourcesForChipPowerMonitor">
        <python_module>
            spinn_front_end_common.interface.interface_functions.pre_allocate_resources_for_chip_power_monitor
        </python_module>
        <python_class>PreAllocateResourcesForChipPowerMonitor</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>pre_allocated_resources</param_name>
                <param_type>MemoryPreAllocatedResources</param_type>
            </parameter>
            <parameter>
                <param_name>n_machine_time_steps</param_name>
                <param_type>TotalMachineTimeSteps</param_type>
            </parameter>
            <parameter>
                <param_name>n_samples_per_recording</param_name>
                <param_type>MemoryNumberSamplesPerRecordingEntry</param_type>
            </parameter>
            <parameter>
                <param_name>sampling_frequency</param_name>
                <param_type>MemorySamplingFrequency</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>n_machine_time_steps</param_name>
            <param_name>n_samples_per_recording</param_name>
            <param_name>sampling_frequency</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>machine_time_step</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>pre_allocated_resources</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryPreAllocatedResources</param_type>
        </outputs>
    </algorithm>
    <algorithm name="InsertChipPowerMonitorsToGraphs">
        <python_module>
            spinn_front_end_common.interface.interface_functions.insert_chip_power_monitors_to_graphs
        </python_module>
        <python_class>InsertChipPowerMonitorsToGraphs</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>n_samples_per_recording</param_name>
                <param_type>MemoryNumberSamplesPerRecordingEntry</param_type>
            </parameter>
            <parameter>
                <param_name>sampling_frequency</param_name>
                <param_type>MemorySamplingFrequency</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>machine_graph</param_name>
            <param_name>n_samples_per_recording</param_name>
            <param_name>sampling_frequency</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
            <param_name>graph_mapper</param_name>
        </optional_inputs>
    </algorithm>
    <algorithm name="PreAllocateResourcesForLivePacketGatherers">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>PreAllocateResourcesForLivePacketGatherers</python_class>
        <input_definitions>
            <parameter>
                <param_name>live_packet_gatherer_parameters</param_name>
                <param_type>LivePacketRecorderParameters</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>pre_allocated_resources</param_name>
                <param_type>MemoryPreAllocatedResources</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>live_packet_gatherer_parameters</param_name>
            <param_name>machine</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>pre_allocated_resources</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryPreAllocatedResources</param_type>
        </outputs>
    </algorithm>
    <algorithm name="InsertEdgesToLivePacketGatherers">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>InsertEdgesToLivePacketGatherers</python_class>
        <input_definitions>
            <parameter>
                <param_name>live_packet_gatherer_parameters</param_name>
                <param_type>LivePacketRecorderParameters</param_type>
            </parameter>
            <parameter>
                <param_name>live_packet_gatherers_to_vertex_mapping</param_name>
                <param_type>LivePacketRecorderParametersToVertexMapping</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>live_packet_gatherer_parameters</param_name>
            <param_name>live_packet_gatherers_to_vertex_mapping</param_name>
            <param_name>machine</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>application_graph</param_name>
            <param_name>graph_mapper</param_name>
        </optional_inputs>
        <outputs>
        </outputs>
    </algorithm>
    <algorithm name="InsertLivePacketGatherersToGraphs">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>InsertLivePacketGatherersToGraphs</python_class>
        <input_definitions>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>live_packet_gatherer_parameters</param_name>
                <param_type>LivePacketRecorderParameters</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>live_packet_gatherer_parameters</param_name>
            <param_name>machine_graph</param_name>
            <param_name>machine</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>graph_mapper</param_name>
            <param_name>application_graph</param_name>
        </optional_inputs>
        <outputs>
            <param_type>LivePacketRecorderParametersToVertexMapping</param_type>
        </outputs>
    </algorithm>
    <algorithm name="TDMAAgendaBuilder">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>TDMAAgendaBuilder</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>number_of_cpu_cycles_per_receive</param_name>
                <param_type>NumberOfCPUCyclesUsedByThePacketReceiveCallback
                </param_type>
            </parameter>
            <parameter>
                <param_name>other_cpu_demands_in_cpu_cycles</param_name>
                <param_type>NumberOfCpuCyclesByOtherCallbacks</param_type>
            </parameter>
            <parameter>
                <param_name>n_packets_per_time_window</param_name>
                <param_type>NPacketsPerTimeWindow</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>safety_factor</param_name>
                <param_type>EndUserConfigurableSafetyFactorForTDMAAgenda</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>other_cpu_demands_in_cpu_cycles</param_name>
            <param_name>n_packets_per_time_window</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>number_of_cpu_cycles_per_receive</param_name>
            <param_name>machine_graph</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>safety_factor</param_name>
        </optional_inputs>
        <outputs>
            <param_type>TDMAAgenda</param_type>
        </outputs>
    </algorithm>
    <algorithm name="DSGRegionReloader">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>DSGRegionReloader</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>hostname</param_name>
                <param_type>IPAddress</param_type>
            </parameter>
            <parameter>
                <param_name>report_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>write_text_specs</param_name>
                <param_type>WriteTextSpecsFlag</param_type>
            </parameter>
            <parameter>
                <param_name>application_data_file_path</param_name>
                <param_type>ApplicationDataFolder</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>placements</param_name>
            <param_name>hostname</param_name>
            <param_name>report_directory</param_name>
            <param_name>write_text_specs</param_name>
            <param_name>application_data_file_path</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>graph_mapper</param_name>
        </optional_inputs>
    </algorithm>
    <algorithm name="HostExecuteDataSpecification">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>HostExecuteDataSpecification</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>dsg_targets</param_name>
                <param_type>DataSpecificationTargets</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>dsg_targets</param_name>
        </required_inputs>
        <outputs>
            <param_type>ProcessorToAppDataBaseAddress</param_type>
            <param_type>LoadedApplicationDataToken</param_type>
        </outputs>
    </algorithm>
    <algorithm name="MachineExecuteDataSpecification">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>MachineExecuteDataSpecification</python_class>
        <input_definitions>
            <parameter>
                <param_name>write_memory_map_report</param_name>
                <param_type>WriteMemoryMapReportFlag</param_type>
            </parameter>
            <parameter>
                <param_name>dsg_targets</param_name>
                <param_type>DataSpecificationTargets</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>write_memory_map_report</param_name>
            <param_name>dsg_targets</param_name>
            <param_name>transceiver</param_name>
            <param_name>app_id</param_name>
        </required_inputs>
        <outputs>
            <param_type>LoadedApplicationDataToken</param_type>
        </outputs>
    </algorithm>
    <algorithm name="LoadExecutableImages">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>LoadExecutableImages</python_class>
        <input_definitions>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>loaded_application_data_token</param_name>
                <param_type>LoadedApplicationDataToken</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>executable_targets</param_name>
            <param_name>app_id</param_name>
            <param_name>transceiver</param_name>
            <param_name>loaded_application_data_token</param_name>
        </required_inputs>
        <outputs>
            <param_type>LoadBinariesToken</param_type>
        </outputs>
    </algorithm>
    <algorithm name="MachineGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>MachineGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>hostname</param_name>
                <param_type>IPAddress</param_type>
            </parameter>
            <parameter>
                <param_name>reset_machine_on_start_up</param_name>
                <param_type>ResetMachineOnStartupFlag</param_type>
            </parameter>
            <parameter>
                <param_name>bmp_details</param_name>
                <param_type>BMPDetails</param_type>
            </parameter>
            <parameter>
                <param_name>downed_chips</param_name>
                <param_type>DownedChipsDetails</param_type>
            </parameter>
            <parameter>
                <param_name>downed_cores</param_name>
                <param_type>DownedCoresDetails</param_type>
            </parameter>
            <parameter>
                <param_name>downed_links</param_name>
                <param_type>DownedLinksDetails</param_type>
            </parameter>
            <parameter>
                <param_name>board_version</param_name>
                <param_type>BoardVersion</param_type>
            </parameter>
            <parameter>
                <param_name>auto_detect_bmp</param_name>
                <param_type>AutoDetectBMPFlag</param_type>
            </parameter>
            <parameter>
                <param_name>enable_reinjection</param_name>
                <param_type>EnableReinjectionFlag</param_type>
            </parameter>
            <parameter>
                <param_name>scamp_connection_data</param_name>
                <param_type>ScampConnectionData</param_type>
            </parameter>
            <parameter>
                <param_name>boot_port_num</param_name>
                <param_type>BootPortNum</param_type>
            </parameter>
            <parameter>
                <param_name>max_sdram_size</param_name>
                <param_type>MaxSDRAMSize</param_type>
            </parameter>
            <parameter>
                <param_name>max_core_id</param_name>
                <param_type>MAxCoreID</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>hostname</param_name>
            <param_name>reset_machine_on_start_up</param_name>
            <param_name>bmp_details</param_name>
            <param_name>downed_chips</param_name>
            <param_name>downed_cores</param_name>
            <param_name>downed_links</param_name>
            <param_name>board_version</param_name>
            <param_name>auto_detect_bmp</param_name>
            <param_name>enable_reinjection</param_name>
            <param_name>scamp_connection_data</param_name>
            <param_name>boot_port_num</param_name>
            <param_name>max_sdram_size</param_name>
        </required_inputs>
        <optional_inputs>
                <param_name>max_core_id</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryMachine</param_type>
            <param_type>MemoryTransceiver</param_type>
        </outputs>
    </algorithm>
    <algorithm name="RoutingTableLoader">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>RoutingTableLoader</python_class>
        <input_definitions>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryCompressedRoutingTables</param_type>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>router_tables</param_name>
            <param_name>app_id</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
        </required_inputs>
        <outputs>
            <param_type>LoadedRoutingTablesToken</param_type>
        </outputs>
    </algorithm>
    <algorithm name="RoutingSetup">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>RoutingSetup</python_class>
        <input_definitions>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryCompressedRoutingTables</param_type>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>router_tables</param_name>
            <param_name>app_id</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="TagsLoader">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>TagsLoader</python_class>
        <input_definitions>
            <parameter>
                <param_name>tags</param_name>
                <param_type>MemoryTags</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>tags</param_name>
            <param_name>transceiver</param_name>
        </required_inputs>
        <outputs>
            <param_type>LoadedIPTagsToken</param_type>
            <param_type>LoadedReverseIPTagsToken</param_type>
        </outputs>
    </algorithm>
    <algorithm name="TagsLoaderSeparateLists">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>TagsLoader</python_class>
        <input_definitions>
            <parameter>
                <param_name>iptags</param_name>
                <param_type>MemoryIpTags</param_type>
            </parameter>
            <parameter>
                <param_name>reverse_iptags</param_name>
                <param_type>MemoryReverseTags</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>iptags</param_name>
            <param_name>reverse_iptags</param_name>
            <param_name>transceiver</param_name>
        </required_inputs>
        <outputs>
            <param_type>LoadedIPTagsToken</param_type>
            <param_type>LoadedReverseIPTagsToken</param_type>
        </outputs>
    </algorithm>
    <algorithm name="VirtualMachineGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>VirtualMachineGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>width</param_name>
                <param_type>MachineWidth</param_type>
            </parameter>
            <parameter>
                <param_name>height</param_name>
                <param_type>MachineHeight</param_type>
            </parameter>
            <parameter>
                <param_name>virtual_has_wrap_arounds</param_name>
                <param_type>MachineHasWrapAroundsFlag</param_type>
            </parameter>
            <parameter>
                <param_name>version</param_name>
                <param_type>BoardVersion</param_type>
            </parameter>
            <parameter>
                <param_name>n_cpus_per_chip</param_name>
                <param_type>CPUsPerVirtualChip</param_type>
            </parameter>
            <parameter>
                <param_name>with_monitors</param_name>
                <param_type>VirtualChipsHaveMonitor</param_type>
            </parameter>
            <parameter>
                <param_name>down_chips</param_name>
                <param_type>DownedChipsDetails</param_type>
            </parameter>
            <parameter>
                <param_name>down_cores</param_name>
                <param_type>DownedCoresDetails</param_type>
            </parameter>
            <parameter>
                <param_name>down_links</param_name>
                <param_type>DownedLinksDetails</param_type>
            </parameter>
        </input_definitions>
        <optional_inputs>
            <param_name>width</param_name>
            <param_name>height</param_name>
            <param_name>virtual_has_wrap_arounds</param_name>
            <param_name>version</param_name>
            <param_name>n_cpus_per_chip</param_name>
            <param_name>with_monitors</param_name>
            <param_name>down_chips</param_name>
            <param_name>down_cores</param_name>
            <param_name>down_links</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryMachine</param_type>
        </outputs>
    </algorithm>
    <algorithm name="GraphDataSpecificationWriter">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>GraphDataSpecificationWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>hostname</param_name>
                <param_type>IPAddress</param_type>
            </parameter>
            <parameter>
                <param_name>report_default_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>write_text_specs</param_name>
                <param_type>WriteTextSpecsFlag</param_type>
            </parameter>
            <parameter>
                <param_name>app_data_runtime_folder</param_name>
                <param_type>ApplicationDataFolder</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>hostname</param_name>
            <param_name>report_default_directory</param_name>
            <param_name>write_text_specs</param_name>
            <param_name>app_data_runtime_folder</param_name>
            <param_name>machine</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>graph_mapper</param_name>
        </optional_inputs>
        <outputs>
            <param_type>DataSpecificationTargets</param_type>
        </outputs>
    </algorithm>
    <algorithm name="GraphBinaryGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>GraphBinaryGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>executable_finder</param_name>
            <param_name>graph</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>graph_mapper</param_name>
        </optional_inputs>
        <outputs>
            <param_type>ExecutableTargets</param_type>
        </outputs>
    </algorithm>
    <algorithm name="LocateExecutableStartType">
        <python_module>spinn_front_end_common.interface.interface_functions.locate_executable_start_type</python_module>
        <python_class>LocateExecutableStartType</python_class>
        <input_definitions>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
            <parameter>
                <param_name>graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>graph</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>graph_mapper</param_name>
        </optional_inputs>
        <outputs>
            <param_type>ExecutableStartType</param_type>
        </outputs>
    </algorithm>
    <algorithm name="BufferManagerCreator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>BufferManagerCreator</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>tags</param_name>
                <param_type>MemoryTags</param_type>
            </parameter>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>store_data_in_file</param_name>
                <param_type>StoreBufferDataInFile</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>tags</param_name>
            <param_name>txrx</param_name>
            <param_name>store_data_in_file</param_name>
        </required_inputs>
        <outputs>
            <param_type>BufferManager</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ApplicationRunner">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ApplicationRunner</python_class>
        <input_definitions>
            <parameter>
                <param_name>buffer_manager</param_name>
                <param_type>BufferManager</param_type>
            </parameter>
            <parameter>
                <param_name>wait_on_confirmation</param_name>
                <param_type>DatabaseWaitOnConfirmationFlag</param_type>
            </parameter>
            <parameter>
                <param_name>send_stop_notification</param_name>
                <param_type>SendStopNotifications</param_type>
            </parameter>
            <parameter>
                <param_name>send_start_notification</param_name>
                <param_type>SendStartNotifications</param_type>
            </parameter>
            <parameter>
                <param_name>notification_interface</param_name>
                <param_type>NotificationInterface</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>executable_start_type</param_name>
                <param_type>ExecutableStartType</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>runtime</param_name>
                <param_type>RunTime</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>loaded_reverse_iptags_token</param_name>
                <param_type>LoadedReverseIPTagsToken</param_type>
            </parameter>
            <parameter>
                <param_name>loaded_iptags_token</param_name>
                <param_type>LoadedIPTagsToken</param_type>
            </parameter>
            <parameter>
                <param_name>loaded_routing_tables_token</param_name>
                <param_type>LoadedRoutingTablesToken</param_type>
            </parameter>
            <parameter>
                <param_name>loaded_binaries_token</param_name>
                <param_type>LoadBinariesToken</param_type>
            </parameter>
            <parameter>
                <param_name>loaded_application_data_token</param_name>
                <param_type>LoadedApplicationDataToken</param_type>
            </parameter>
            <parameter>
                <param_name>no_sync_changes</param_name>
                <param_type>NoSyncChanges</param_type>
            </parameter>
            <parameter>
                <param_name>time_threshold</param_name>
                <param_type>PostSimulationOverrunBeforeError</param_type>
            </parameter>
            <parameter>
                <param_name>run_until_complete</param_name>
                <param_type>RunUntilCompleteFlag</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>buffer_manager</param_name>
            <param_name>wait_on_confirmation</param_name>
            <param_name>send_start_notification</param_name>
            <param_name>send_stop_notification</param_name>
            <param_name>notification_interface</param_name>
            <param_name>executable_targets</param_name>
            <param_name>executable_start_type</param_name>
            <param_name>app_id</param_name>
            <param_name>txrx</param_name>
            <param_name>runtime</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>loaded_reverse_iptags_token</param_name>
            <param_name>loaded_iptags_token</param_name>
            <param_name>loaded_routing_tables_token</param_name>
            <param_name>loaded_binaries_token</param_name>
            <param_name>loaded_application_data_token</param_name>
            <param_name>no_sync_changes</param_name>
            <param_name>time_threshold</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>run_until_complete</param_name>
        </optional_inputs>
        <outputs>
            <param_type>RanToken</param_type>
            <param_type>NoSyncChanges</param_type>
        </outputs>
    </algorithm>
    <algorithm name="PlacementsProvenanceGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>PlacementsProvenanceGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>has_ran</param_name>
                <param_type>RanToken</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>placements</param_name>
            <param_name>has_ran</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>provenance_data_objects</param_name>
        </optional_inputs>
        <outputs>
            <param_type>ProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="GraphProvenanceGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>GraphProvenanceGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
        </required_inputs>
        <optional_inputs>
            <all_of>
                <param_name>application_graph</param_name>
                <param_name>provenance_data_objects</param_name>
            </all_of>
        </optional_inputs>
        <outputs>
            <param_type>ProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="RouterProvenanceGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>RouterProvenanceGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>has_ran</param_name>
                <param_type>RanToken</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>router_tables</param_name>
            <param_name>has_ran</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>provenance_data_objects</param_name>
        </optional_inputs>
        <outputs>
            <param_type>ProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ProvenanceXMLWriter">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ProvenanceXMLWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>provenance_data_items</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_path</param_name>
                <param_type>ProvenanceFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>provenance_data_items</param_name>
            <param_name>provenance_data_path</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="ProvenanceJSONWriter">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ProvenanceJSONWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>provenance_data_items</param_name>
                <param_type>ProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_path</param_name>
                <param_type>ProvenanceFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>provenance_data_items</param_name>
            <param_name>provenance_data_path</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="DatabaseInterface">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>DatabaseInterface</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>user_create_database</param_name>
                <param_type>UserCreateDatabaseFlag</param_type>
            </parameter>
            <parameter>
                <param_name>tags</param_name>
                <param_type>MemoryTags</param_type>
            </parameter>
            <parameter>
                <param_name>database_directory</param_name>
                <param_type>ApplicationDataFolder</param_type>
            </parameter>
            <parameter>
                <param_name>runtime</param_name>
                <param_type>RunTime</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>router_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
                <param_type>MemoryCompressedRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>create_atom_to_event_id_mapping</param_name>
                <param_type>CreateAtomToEventIdMapping</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>user_create_database</param_name>
            <param_name>tags</param_name>
            <param_name>database_directory</param_name>
            <param_name>runtime</param_name>
            <param_name>machine</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>placements</param_name>
            <param_name>routing_infos</param_name>
            <param_name>router_tables</param_name>
        </required_inputs>
        <optional_inputs>
            <all_of>
                <param_name>create_atom_to_event_id_mapping</param_name>
                <param_name>application_graph</param_name>
                <param_name>graph_mapper</param_name>
            </all_of>
        </optional_inputs>
        <outputs>
            <param_type>DatabaseInterface</param_type>
            <param_type>DatabaseFilePath</param_type>
        </outputs>
    </algorithm>
    <algorithm name="NotificationProtocol">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>NotificationProtocol</python_class>
        <input_definitions>
            <parameter>
                <param_name>wait_for_read_confirmation</param_name>
                <param_type>DatabaseWaitOnConfirmationFlag</param_type>
            </parameter>
            <parameter>
                <param_name>socket_addresses</param_name>
                <param_type>DatabaseSocketAddresses</param_type>
            </parameter>
            <parameter>
                <param_name>database_file_path</param_name>
                <param_type>DatabaseFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>wait_for_read_confirmation</param_name>
            <param_name>socket_addresses</param_name>
            <param_name>database_file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>NotificationInterface</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ApplicationFinisher">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ApplicationFinisher</python_class>
        <input_definitions>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>has_ran</param_name>
                <param_type>RanToken</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>app_id</param_name>
            <param_name>txrx</param_name>
            <param_name>executable_targets</param_name>
            <param_name>has_ran</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="ChipRuntimeUpdater">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ChipRuntimeUpdater</python_class>
        <input_definitions>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>no_machine_timesteps</param_name>
                <param_type>TotalMachineTimeSteps</param_type>
            </parameter>
            <parameter>
                <param_name>loaded_binaries_token</param_name>
                <param_type>LoadBinariesToken</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>txrx</param_name>
            <param_name>app_id</param_name>
            <param_name>executable_targets</param_name>
            <param_name>no_machine_timesteps</param_name>
            <param_name>loaded_binaries_token</param_name>
        </required_inputs>
        <outputs>
            <param_type>HasLoadedRuntimeToChips</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ChipProvenanceUpdater">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ChipProvenanceUpdater</python_class>
        <input_definitions>
            <parameter>
                <param_name>txrx</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>all_core_subsets</param_name>
                <param_type>FailedCoresSubsets</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>txrx</param_name>
            <param_name>app_id</param_name>
            <param_name>all_core_subsets</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="ChipIOBufClearer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ChipIOBufClearer</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>ran_token</param_name>
                <param_type>RanToken</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>executable_targets</param_name>
            <param_name>ran_token</param_name>
        </required_inputs>
        <outputs>
            <param_type>ClearedIOBufToken</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ChipIOBufExtractor">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>ChipIOBufExtractor</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>has_ran</param_name>
                <param_type>RanToken</param_type>
            </parameter>
            <parameter>
                <param_name>core_subsets</param_name>
                <param_type>CoresToExtractIOBufFrom</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>ProvenanceFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>has_ran</param_name>
            <param_name>core_subsets</param_name>
            <param_name>provenance_file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>ErrorMessages</param_type>
            <param_type>WarnMessages</param_type>
        </outputs>
    </algorithm>
    <algorithm name="EdgeToNKeysMapper">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>EdgeToNKeysMapper</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <optional_inputs>
            <one_of>
                <all_of>
                    <param_name>graph_mapper</param_name>
                    <param_name>application_graph</param_name>
                    <param_name>machine_graph</param_name>
                </all_of>
                <all_of>
                    <param_name>machine_graph</param_name>
                </all_of>
            </one_of>
        </optional_inputs>
        <outputs>
            <param_type>MemoryMachinePartitionNKeysMap</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpallocAllocator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>SpallocAllocator</python_class>
        <input_definitions>
            <parameter>
                <param_name>spalloc_server</param_name>
                <param_type>SpallocServer</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_user</param_name>
                <param_type>SpallocUser</param_type>
            </parameter>
            <parameter>
                <param_name>n_chips</param_name>
                <param_type>NChipsRequired</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_port</param_name>
                <param_type>SpallocPort</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_machine</param_name>
                <param_type>SpallocMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>spalloc_server</param_name>
            <param_name>spalloc_user</param_name>
            <param_name>n_chips</param_name>
        </required_inputs>
        <optional_inputs>
            <all_of>
                <param_name>spalloc_port</param_name>
                <param_name>spalloc_machine</param_name>
            </all_of>
        </optional_inputs>
        <outputs>
            <param_type>IPAddress</param_type>
            <param_type>BoardVersion</param_type>
            <param_type>DownedChipsDetails</param_type>
            <param_type>DownedCoresDetails</param_type>
            <param_type>DownedLinksDetails</param_type>
            <param_type>BMPDetails</param_type>
            <param_type>ResetMachineOnStartupFlag</param_type>
            <param_type>AutoDetectBMPFlag</param_type>
            <param_type>ScampConnectionData</param_type>
            <param_type>BootPortNum</param_type>
            <param_type>MaxSDRAMSize</param_type>
            <param_type>MachineAllocationController</param_type>
        </outputs>
    </algorithm>
    <algorithm name="HBPAllocator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>HBPAllocator</python_class>
        <input_definitions>
            <parameter>
                <param_name>hbp_server_url</param_name>
                <param_type>RemoteSpinnakerUrl</param_type>
            </parameter>
            <parameter>
                <param_name>total_run_time</param_name>
                <param_type>TotalRunTime</param_type>
            </parameter>
            <parameter>
                <param_name>n_chips</param_name>
                <param_type>NChipsRequired</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>hbp_server_url</param_name>
            <param_name>total_run_time</param_name>
            <param_name>n_chips</param_name>
        </required_inputs>
        <outputs>
            <param_type>IPAddress</param_type>
            <param_type>BoardVersion</param_type>
            <param_type>DownedChipsDetails</param_type>
            <param_type>DownedCoresDetails</param_type>
            <param_type>BMPDetails</param_type>
            <param_type>ResetMachineOnStartupFlag</param_type>
            <param_type>AutoDetectBMPFlag</param_type>
            <param_type>ScampConnectionData</param_type>
            <param_type>BootPortNum</param_type>
            <param_type>MaxSDRAMSize</param_type>
            <param_type>MachineAllocationController</param_type>
            <param_type>DownedLinksDetails</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpallocMaxMachineGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>SpallocMaxMachineGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>spalloc_server</param_name>
                <param_type>SpallocServer</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_port</param_name>
                <param_type>SpallocPort</param_type>
            </parameter>
            <parameter>
                <param_name>spalloc_machine</param_name>
                <param_type>SpallocMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>spalloc_server</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>spalloc_port</param_name>
            <param_name>spalloc_machine</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MachineWidth</param_type>
            <param_type>MachineHeight</param_type>
            <param_type>MachineHasWrapAroundsFlag</param_type>
            <param_type>BoardVersion</param_type>
        </outputs>
    </algorithm>
    <algorithm name="HBPMaxMachineGenerator">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>HBPMaxMachineGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>hbp_server_url</param_name>
                <param_type>RemoteSpinnakerUrl</param_type>
            </parameter>
            <parameter>
                <param_name>total_run_time</param_name>
                <param_type>TotalRunTime</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>hbp_server_url</param_name>
            <param_name>total_run_time</param_name>
        </required_inputs>
        <outputs>
            <param_type>MachineWidth</param_type>
            <param_type>MachineHeight</param_type>
            <param_type>MachineHasWrapAroundsFlag</param_type>
        </outputs>
    </algorithm>
    <algorithm name="GraphMeasurer">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>GraphMeasurer</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>machine</param_name>
        </required_inputs>
        <outputs>
            <param_type>NChipsRequired</param_type>
        </outputs>
    </algorithm>
    <algorithm name="BufferExtractor">
        <python_module>spinn_front_end_common.interface.interface_functions</python_module>
        <python_class>BufferExtractor</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>buffer_manager</param_name>
                <param_type>BufferManager</param_type>
            </parameter>
            <parameter>
                <param_name>ran_token</param_name>
                <param_type>RanToken</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>buffer_manager</param_name>
            <param_name>ran_token</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="ProfileDataGatherer">
        <python_module>spinn_front_end_common.interface.interface_functions.profile_data_gatherer</python_module>
        <python_class>ProfileDataGatherer</python_class>
        <input_definitions>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>has_ran</param_name>
                <param_type>RanToken</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>ProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>run_time_ms</param_name>
                <param_type>RunTime</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>transceiver</param_name>
            <param_name>placements</param_name>
            <param_name>has_ran</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>run_time_ms</param_name>
            <param_name>machine_time_step</param_name>
        </required_inputs>
    </algorithm>
</algorithms>