# DO NOT EDIT!
# The are the default values
# Edit the cfg in your home directory to change your preferences
# Add / Edit a cfg in the run directory for script specific changes

# Adds to values in PACMAN/pacman/pacman.cfg and SpiNNMan/spinnman/spinnman.cfg
# Which in turn adds to values in SpiNNUtils/spinn_utilities/spinn_utilities.cfg
# and SpiNNMachine/spinn_machine/spinn_machine.cfg

[Reports]
# Energy report adds placements so off by default even in debug mode
write_energy_report = False
# write_router_reports: If True, each router file is written in
#                 text format to reports/routers
write_router_reports = Debug
write_router_summary_report = Debug
write_partitioner_reports = Info
write_application_graph_placer_report = Info
write_router_info_report = Info
write_uncompressed = Debug
write_compressed = Debug
write_compression_comparison = Debug
write_compression_summary = Debug
write_memory_map_report = Debug
write_network_specification_report = Info
read_router_provenance_data = Debug
read_graph_provenance_data = Debug
read_placements_provenance_data = Debug
read_profile_data = Debug
read_provenance_data_on_end = Debug
write_provenance = Info
write_tag_allocation_reports = Debug
write_algorithm_timings = Debug
write_board_chip_report = Debug
write_data_speed_up_reports = Debug
write_sdram_usage_report_per_chip = Info
write_json_machine = Debug
write_json_placements = Debug
write_json_routing_tables = Debug
write_compressor_iobuf = Debug
write_bit_field_compressor_report = Debug
write_drift_report_start = Debug
write_drift_report_end = Debug
# write_text_specs: If True, produce text version of each Data Spec,
#                 in reports/dataSpec directory
write_text_specs = Debug
write_fixed_routes_report = Debug

max_reports_kept = 10
remove_errored_folders = True

display_algorithm_timings = True
extract_iobuf = Debug
extract_iobuf_from_cores = ALL
extract_iobuf_from_binary_types = None
clear_iobuf_during_run = True

provenance_report_cutoff = 20

drift_report_ethernet_only = True

# NOTE ***that for bespoke file paths, folders will not be automatically deleted***
# options are DEFAULT or a file path
# Note for hard coded locations a "reports" sub directory will be added
default_report_file_path = DEFAULT

keep_json_files = Debug
keep_data_database = Info
keep_dataspec_database = Debug
keep_input_output_database = Info
keep_java_log = Debug
keep_stack_trace = Info

[Machine]
#-------
# Information about the target SpiNNaker board or machine:
# machineName: The name or IP address of the target board
# down_cores: Cores that are not working
# down_chips: Chips that are not working
# core_limit: The maximum number of cores to use on the board
# machineTimeStep: Internal time step in simulations in u_secs)
# timeScaleFactor: Change this to slow down the simulation time
#                  relative to real time.
# appID:           Used by sark to identify the user's application.
spalloc_port = 22244
spalloc_user = None
spalloc_group = None
spalloc_machine = None
spalloc_use_proxy = True
# A comma seperated list of ip addresses to avoid.
spalloc_avoid_boards = None

simulation_time_step = 1000
time_scale_factor = None


clear_routing_tables = False
clear_tags = False

enable_advanced_monitor_support = True
enable_reinjection = True
disable_advanced_monitor_usage_for_data_in = False

reset_machine_on_startup = False
post_simulation_overrun_before_error = 5

# format is:
#     bmp_names     = <host>[/(<board-range>|board_id[,board_id]*)
#     <board_range> = <board_id>-<board_id>
# where:
#     <host> is the hostname or IP address of the BMP
#     <board_range> is a range of boards that the BMP can speak to
#     <board_id> is the ID of a single board in a frame
# Note this no longer supports multiple host nor cabinet or frame
bmp_names = None

auto_detect_bmp = False

# Note: if json_path is set all other configs for virtual boards are ignored
json_path = None

[Mapping]
placer = ApplicationPlacer
info_allocator = ZonedRoutingInfoAllocator
router = ApplicationRouter
routing_table_generator = MergedRoutingTableGenerator
precompressor = None
compressor = PairOnChipRouterCompression
# If None the normal compressor is tried and may be skipped
virtual_compressor = PairCompressor

# If True will read compressed routing tables and check them
run_compression_checker = Debug
validate_routes_uncompressed = False
validate_json = Debug

[Buffers]
use_auto_pause_and_resume = True
#chip_power_monitor_buffer = 1048576
#store_buffer_data_in_file = True
minimum_auto_time_steps = 1000

[Mode]
# mode = Production or Debug
# In Debug mode all report Boolean config values are automitcally overwritten to True

mode = Production

[Database]
create_database = None
wait_on_confirmation = True
wait_on_confirmation_timeout = 10
create_routing_info_to_neuron_id_mapping = True

[EnergyMonitor]
sampling_frequency = 10
n_samples_per_recording_entry = 100

[Java]
use_java = False
# call to start a Java process.
# If there is no jdk../bin in your class path this must include the full path
java_call = java

# Absolute path to where the JavaSpiNNaker git repository is located.
# This must point to a local copy of
# https://github.com/SpiNNakerManchester/JavaSpiNNaker
# It must also have been built!
# If none it will be assumed to be in the same parent directory as SpiNNFrontEndCommon
# Note: Do not quote even if path has spaces as these added by subprocess.call
java_spinnaker_path = None

# Absolute path to where the spinnaker-exe.jar is located.
# Get this from the latest release at https://github.com/SpiNNakerManchester/JavaSpiNNaker
# Only use this if you have not built JavaSpiNNaker
java_jar_path = None

# Properties flag to be passed into every Java call.
# Default logging level is info so NO properties needed
java_properties = None
# Each Property must start with the -D flag
# To turn on debug level logging (lots)
# java_properties=-Dlogging.level=DEBUG
# Multiple properties are supported.
# Properties must be separated with a space and without quotes.
# java_properties=-Dspinnaker.compare.download -Dlogging.level=DEBUG
# Supported properties are:
#     spinnaker.compare.download  (enables comparisons of multiple download methods; slow)
#     spinnaker.parallel_tasks    (how many downloads to do in parallel; default: 4)
#     logging.level  (defaults to INFO; DEBUG is also useful)
#     logging.udp    (enables low-level logging of UDP traffic; produces a lot of output)
#     spinnaker.scp_timeout       (how long to wait for SCP replies from
#                                 SpiNNaker, in milliseconds, which may need to
#                                 be raised on very busy networks; default: 1000)
